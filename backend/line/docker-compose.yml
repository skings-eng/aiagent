version: '3.8'

services:
  # LINE Bot Service
  line-service:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: aiagent-line-service
    ports:
      - "3003:3003"
      - "9229:9229"  # Debug port
    environment:
      - NODE_ENV=development
      - PORT=3003
      - HOST=0.0.0.0
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=debug
      - LOG_FILE_ENABLED=true
      - REQUEST_LOG_ENABLED=true
      - PERFORMANCE_LOG_ENABLED=true
      - RATE_LIMIT_ENABLED=true
      - CORS_ENABLED=true
      - HEALTH_CHECK_ENABLED=true
      - WEBHOOK_VERIFY_SIGNATURE=true
      - USER_ACTIVITY_UPDATE_ENABLED=true
      - API_DOCS_ENABLED=true
      - DEV_MODE=true
      - DEV_AUTO_RELOAD=true
    env_file:
      - .env
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./backups:/app/backups
      - /app/node_modules
    depends_on:
      - redis
    networks:
      - aiagent-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: aiagent-redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - aiagent-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  # Redis Commander (Redis GUI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: aiagent-redis-commander
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin
    depends_on:
      - redis
    networks:
      - aiagent-network
    restart: unless-stopped
    profiles:
      - tools

  # Nginx (Optional reverse proxy)
  nginx:
    image: nginx:alpine
    container_name: aiagent-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - line-service
    networks:
      - aiagent-network
    restart: unless-stopped
    profiles:
      - proxy

volumes:
  redis_data:
    driver: local

networks:
  aiagent-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16